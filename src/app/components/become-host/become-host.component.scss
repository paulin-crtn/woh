@import '../../../sass/_variables';


.background-image {
    background-image: url('../../../assets/icons/lifebuoy.svg');
    background-size: 45%;
    background-repeat: no-repeat;
    background-position: bottom -50px right 300px;
}

.background-opacity {
    background-color: rgba($color: #ffffff, $alpha: 0.8);
}

.flexbox {
    display: flex;
    align-items: flex-start;
    justify-content: space-between;
}

h1 {
    width: 55%;
    margin-bottom: 30px;
}

.landing-arguments {
    .landing-text {
        margin-bottom: 40px;
        h2 {
            margin-bottom: 15px;
        }
        h2, h3 {
            font-family: $text;
            font-size: 1.2rem;
            font-weight: 300;
            line-height: 1.8rem;
            color: #000000;
        }
    }
    .landing-bullet {
        display: flex;
        align-items: center;
        margin-bottom: 10px;
        img {
            width: 23px;
        }
        p {
            margin-left: 12px;
            font-size: 1.15rem;
            font-weight: 400;
        }
    }
}

.landing-form {
    margin-left: 100px;
    form {
        position: relative;
        width: 380px;
        padding: 30px 30px 60px 30px;
        background-color: $primary;
        border-radius: 10px;
        box-sizing: border-box;
        input[type=text], input[type=email], input[type=password] {
            display: block;
            width: 100%;
            height: 45px;
            line-height: 45px;
            margin: 10px 0;
            padding: 5px 10px;
            border: none;
            border-radius: 5px;
            box-sizing: border-box;
        }
        .checkbox {
            margin-top: 25px;
            label {
                color: #ffffff;
                a {
                    color: #ffffff;
                    border-bottom: 1px solid #ffffff;
                }
            }
        }
        button {
            position: absolute;
            bottom: -25px;
            height: 50px;
            width: 80%;
            left: 50%;
            transform: translateX(-50%);
            font-size: 1.1rem;
        }
    }
}

// MEDIA QUERIES

@media screen and (max-width: 1200px) {
    h1 {
        font-size: 2rem;
    }
    .landing-arguments {
        .landing-text {
            h2, h3 {
                font-size: 1.1rem;
                line-height: 1.6rem;
            }
        }
        .landing-bullet p {
            font-size: 1.1rem;
        }
    }
}


@media screen and (max-width: 1100px) {
    .background-image {
        background-size: 0;
    }
    h1 {
        width: 100%;
    }
    .landing-form {
        margin-left: 50px;
    }
}

@media screen and (max-width: 900px) {
    .flexbox {
        display: block;
    }
    .landing-arguments {
        .landing-bullets {
            .landing-bullet {
                margin-bottom: 8px;
                p {
                    font-size: 1rem;
                }
            }
        }
    }
    .landing-form {
        margin-left: 0;
        margin-top: 40px;
        form {
            width: 80%;
        }
    }
}

@media screen and (max-width: 700px) {
    .landing-form form {
        width: 100%;
    }
}

// CHECKBOX HACK
// Source : https://codepen.io/north-of-rapture/pen/rWqega/

label {
    display: flex;
    align-items: flex-start;
    position: relative; // important
  
    // Now we'll create the checkbox object
    span {
        display: inline-block;
        position: relative;
        background-color: transparent;
        width: 25px;
        height: 25px;
        transform-origin: center;
        border: 1px solid #fff;
        border-radius: 50%;
        vertical-align: -6px;
        margin-right: 12px;
        transition: background-color 150ms 200ms, transform 350ms cubic-bezier(.78,-1.22,.17,1.89); // custom ease effect for bouncy animation
        cursor: pointer;
  
        // Now we'll create the "tick" using pseudo elements - those will be basically two lines that will be rotated to form the "tick"
        &:before {
        content: "";
        width: 0px;
        height: 2px;
        border-radius: 2px; // so that the tick has nice rounded look
        background: #fff;
        position: absolute;
        transform: rotate(45deg);
        top: 13px; // you'll need to experiment with placement depending on the dimensions you've chosen
        left: 9px; // you'll need to experiment with placement depending on the dimensions you've chosen
        transition: width 50ms ease 50ms;
        transform-origin: 0% 0%;
        }

        &:after {
        content: "";
        width: 0;
        height: 2px;
        border-radius: 2px; // so that the tick has nice rounded look
        background: #fff;
        position: absolute;
        transform: rotate(305deg);
        top: 16px; // you'll need to experiment with placement depending on the dimensions you've chosen
        left: 10px; // you'll need to experiment with placement depending on the dimensions you've chosen
        transition: width 50ms ease;
        transform-origin: 0% 0%;
        }
    }

    // Time to add some life to it
    &:hover {
        span {
            &:before {
                width: 5px;
                transition: width 100ms ease;
            }
            &:after {
                width: 10px;
                transition: width 150ms ease 100ms;
            }
        }
    }
}

input[type="checkbox"] {
    display: none; // hide the system checkbox
    // Let's add some effects after the checkbox is checked
    &:checked {
        + label {
            span {
                background-color: #fff;
                transform: scale(1.1); // enlarge the box
                
                &:after {
                width: 10px;
                background: $primary;
                transition: width 150ms ease 100ms; // enlarge the tick
                }
                
                &:before {
                width: 5px;
                background: $primary;
                transition: width 150ms ease 100ms; // enlarge the tick
                }
            }
            
            &:hover { // copy the states for onMouseOver to avoid flickering
                span {
                    background-color: #fff;
                    transform: scale(1.1); // enlarge the box
                    &:after {
                        width: 10px;
                        background: $primary;
                        transition: width 150ms ease 100ms; // enlarge the tick
                    }
                    &:before {
                        width: 5px;
                        background: $primary;
                        transition: width 150ms ease 100ms; // enlarge the tick
                    }
                }  
            }
        }
    }
}
