form {
    border-radius: 10px;
    box-sizing: border-box;
    input[type=text], input[type=email], input[type=password] {
        display: block;
        width: 100%;
        height: 45px;
        line-height: 45px;
        margin: 10px 0;
        padding: 5px 10px;
        border: none;
        border-radius: 5px;
        box-sizing: border-box;
    }
    textarea {
        width: 100%;
        border: 1px solid $light-2;
        padding: 12px;
        font-weight: 300;
        box-sizing: border-box;
        border-radius: 5px;
        resize: none;
    }
}

.error {
    font-size: 0.9rem;
}

// CHECKBOX HACK
// Source : https://codepen.io/north-of-rapture/pen/rWqega/

label.checkbox-hack {
    display: flex;
    align-items: flex-start;
    position: relative; // important
  
    // Now we'll create the checkbox object
    span {
        display: inline-block;
        position: relative;
        background-color: transparent;
        width: 25px;
        height: 25px;
        transform-origin: center;
        border: 1px solid #fff;
        border-radius: 50%;
        vertical-align: -6px;
        margin-right: 12px;
        transition: background-color 150ms 200ms, transform 350ms cubic-bezier(.78,-1.22,.17,1.89); // custom ease effect for bouncy animation
        cursor: pointer;
  
        // Now we'll create the "tick" using pseudo elements - those will be basically two lines that will be rotated to form the "tick"
        &:before {
        content: "";
        width: 0px;
        height: 2px;
        border-radius: 2px; // so that the tick has nice rounded look
        background: #fff;
        position: absolute;
        transform: rotate(45deg);
        top: 13px; // you'll need to experiment with placement depending on the dimensions you've chosen
        left: 9px; // you'll need to experiment with placement depending on the dimensions you've chosen
        transition: width 50ms ease 50ms;
        transform-origin: 0% 0%;
        }

        &:after {
        content: "";
        width: 0;
        height: 2px;
        border-radius: 2px; // so that the tick has nice rounded look
        background: #fff;
        position: absolute;
        transform: rotate(305deg);
        top: 16px; // you'll need to experiment with placement depending on the dimensions you've chosen
        left: 10px; // you'll need to experiment with placement depending on the dimensions you've chosen
        transition: width 50ms ease;
        transform-origin: 0% 0%;
        }
    }

    // Time to add some life to it
    &:hover {
        span {
            &:before {
                width: 5px;
                transition: width 100ms ease;
            }
            &:after {
                width: 10px;
                transition: width 150ms ease 100ms;
            }
        }
    }
}

input[type="checkbox"] {
    display: none; // hide the system checkbox
    // Let's add some effects after the checkbox is checked
    &:checked {
        + label.checkbox-hack {
            span {
                background-color: #fff;
                transform: scale(1.1); // enlarge the box
                
                &:after {
                width: 10px;
                background: $primary;
                transition: width 150ms ease 100ms; // enlarge the tick
                }
                
                &:before {
                width: 5px;
                background: $primary;
                transition: width 150ms ease 100ms; // enlarge the tick
                }
            }
            
            &:hover { // copy the states for onMouseOver to avoid flickering
                span {
                    background-color: #fff;
                    transform: scale(1.1); // enlarge the box
                    &:after {
                        width: 10px;
                        background: $primary;
                        transition: width 150ms ease 100ms; // enlarge the tick
                    }
                    &:before {
                        width: 5px;
                        background: $primary;
                        transition: width 150ms ease 100ms; // enlarge the tick
                    }
                }  
            }
        }
    }
}

// RADIO AND CHECKBOX FULL BG-COLOR
// Source : https://codepen.io/BuddyLReno/pen/boGRPO

.input-full-color {
    background-color: #fff;
    display: block;
    margin: 10px 0;
    position: relative;

    label {
        position: relative;
        display: block;
        z-index: 2;
        padding: 10px 15px;
        text-align: left;
        font-size: 1rem;
        transition: color 200ms ease-in;
        overflow: hidden;
        border: 1px solid $light-2;
        border-radius: 5px;
        cursor: pointer;
      &:before {
        width: 10px;
        height: 10px;
        border-radius: 50%;
        content: '';
        background-color: $primary;
        position: absolute;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%) scale3d(1, 1, 1);
        transition: all 300ms cubic-bezier(0.4, 0.0, 0.2, 1);
        opacity: 0;
        z-index: -1;
      }

      &:after {
        width: 20px;
        height: 20px;
        content: '';
        border: 1px solid $neutral;
        background-color: #fff;
        background-image: url("data:image/svg+xml,%3Csvg width='15' height='15' viewBox='0 0 20 15' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M5.414 11L4 12.414l5.414 5.414L20.828 6.414 19.414 5l-10 10z' fill='%23fff' fill-rule='nonzero'/%3E%3C/svg%3E ");
        background-repeat: no-repeat;
        background-position: 1px 0px;
        border-radius: 50%;
        z-index: 2;
        position: absolute;
        right: 15px;
        top: 50%;
        transform: translateY(-50%);
        cursor: pointer;
        transition: all 200ms ease-in;
      }
    }

    input:checked ~ label {
      color: #fff;
        border-color: $primary;
      &:before {
        transform: translate(-50%, -50%) scale3d(56, 56, 1);
        opacity: 1;
      }

      &:after {
        background-color: $success;
        border-color: $success;
      }
    }

    input {
      width: 20px;
      height: 20px;
      order: 1;
      z-index: 2;
      position: absolute;
      right: 15px;
      top: 50%;
      transform: translateY(-50%);
      cursor: pointer;
      visibility: hidden;
    }
  }

